// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Panda.SEOTracker.DataAccess;

#nullable disable

namespace Panda.SEOTracker.DataAccess.Migrations
{
    [DbContext(typeof(SEOTrackerDbContext))]
    partial class SEOTrackerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Panda.SEOTracker.Entities.SearchTermEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Term")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<Guid>("TrackedUrlId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TrackedUrlId");

                    b.ToTable("SearchTerms", "SEO");
                });

            modelBuilder.Entity("Panda.SEOTracker.Entities.SearchTermHistoryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Positions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SearchEngineUsed")
                        .HasColumnType("int");

                    b.Property<Guid>("SearchTermId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SearchTermId");

                    b.ToTable("SearchTermHistories", "SEO");
                });

            modelBuilder.Entity("Panda.SEOTracker.Entities.TrackedUrlEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<int>("TotalResultsToCheck")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("TrackedUrls", "SEO");
                });

            modelBuilder.Entity("Panda.SEOTracker.Entities.SearchTermEntity", b =>
                {
                    b.HasOne("Panda.SEOTracker.Entities.TrackedUrlEntity", null)
                        .WithMany("SearchTerms")
                        .HasForeignKey("TrackedUrlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Panda.SEOTracker.Entities.SearchTermHistoryEntity", b =>
                {
                    b.HasOne("Panda.SEOTracker.Entities.SearchTermEntity", null)
                        .WithMany("History")
                        .HasForeignKey("SearchTermId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Panda.SEOTracker.Entities.SearchTermEntity", b =>
                {
                    b.Navigation("History");
                });

            modelBuilder.Entity("Panda.SEOTracker.Entities.TrackedUrlEntity", b =>
                {
                    b.Navigation("SearchTerms");
                });
#pragma warning restore 612, 618
        }
    }
}
